{"version":3,"sources":["App.js","index.js"],"names":["App","useState","origImage","setOrigImage","origImageFile","setOrigImageFile","compressedImage","setCompressedImage","fileName","setFileName","className","Container","Grid","Column","width","Item","Image","height","src","type","accept","onChange","e","imageFile","target","files","URL","createObjectURL","name","handle","Button","primary","onClick","preventDefault","output","options","maxSizeMB","maxWidthOrHeight","useWebWorker","alert","imageCompression","then","x","downloadLink","handleCompressImage","href","download","rootElement","document","getElementById","ReactDOM","render"],"mappings":"sPAoIeA,MA5Hf,WACE,MAAkCC,mBAAS,IAA3C,mBAAOC,EAAP,KAAkBC,EAAlB,KAEA,EAA0CF,mBAAS,IAAnD,mBAAOG,EAAP,KAAsBC,EAAtB,KAEA,EAA8CJ,mBAAS,IAAvD,mBAAOK,EAAP,KAAwBC,EAAxB,KAEA,EAAgCN,mBAAS,IAAzC,mBAAOO,EAAP,KAAiBC,EAAjB,KAwCA,OACE,sBAAKC,UAAU,MAAf,UACE,uBAEA,cAACC,EAAA,EAAD,UACE,eAACC,EAAA,EAAD,WACE,cAACA,EAAA,EAAKC,OAAN,CAAaC,MAAO,EAApB,SACE,cAACC,EAAA,EAAD,UACGX,EACC,cAACY,EAAA,EAAD,CAAOF,MAAM,QAAQG,OAAO,QAAQC,IAAKd,IAEzC,cAACY,EAAA,EAAD,CACEF,MAAM,QACNG,OAAO,QACPC,IAAI,uEAMZ,eAACN,EAAA,EAAKC,OAAN,CAAaC,MAAO,EAApB,UACE,uBACEK,KAAK,OACLC,OAAO,UACPV,UAAU,yBACVW,SAAU,SAACC,GAAD,OA/DP,SAACA,GACd,IAAMC,EAAYD,EAAEE,OAAOC,MAAM,GAEjCtB,EAAaoB,GAEblB,EAAiBqB,IAAIC,gBAAgBJ,IAErCd,EAAYc,EAAUK,MAwDKC,CAAOP,MAG1B,uBAEClB,GACC,eAAC0B,EAAA,EAAD,CACEC,SAAO,EACPC,QAAS,SAACV,IA7DI,SAACA,GAC3BA,EAAEW,iBAEF,IAcIC,EAdEC,EAAU,CACdC,UAAW,EAEXC,iBAAkB,IAElBC,cAAc,GAGhB,GAAIH,EAAQC,WAAalC,EAAY,KAGnC,OAFAqC,MAAM,0CAEC,EAKTC,YAAiBtC,EAAWiC,GAASM,MAAK,SAACC,GACzCR,EAASQ,EAET,IAAMC,EAAejB,IAAIC,gBAAgBO,GAEzC3B,EAAmBoC,MAsCPC,CAAoBtB,IAHxB,UAMG,IANH,oBAWF,uBAEChB,GACC,cAACwB,EAAA,EAAD,UACE,oBAAGe,KAAMvC,EAAiBwC,SAAUtC,EAApC,UACG,IADH,yBAQN,cAACI,EAAA,EAAKC,OAAN,CAAaC,MAAO,EAApB,SACE,cAACC,EAAA,EAAD,UACGT,EACC,cAACU,EAAA,EAAD,CACEF,MAAM,QACNG,OAAO,QACPC,IAAKZ,IAGP,cAACU,EAAA,EAAD,CACEF,MAAM,QACNG,OAAO,QACPC,IAAI,gFCpHhB6B,EAAcC,SAASC,eAAe,QAC5CC,IAASC,OACP,cAAC,aAAD,UACE,cAAC,EAAD,MAEFJ,K","file":"static/js/main.37eddb3c.chunk.js","sourcesContent":["import { useState } from \"react\";\n\nimport { Container, Grid, Image, Item, Button } from \"semantic-ui-react\";\n\nimport \"./styles.css\";\n\nimport imageCompression from \"browser-image-compression\";\n\nfunction App() {\n  const [origImage, setOrigImage] = useState(\"\");\n\n  const [origImageFile, setOrigImageFile] = useState(\"\");\n\n  const [compressedImage, setCompressedImage] = useState(\"\");\n\n  const [fileName, setFileName] = useState(\"\");\n\n  const handle = (e) => {\n    const imageFile = e.target.files[0];\n\n    setOrigImage(imageFile);\n\n    setOrigImageFile(URL.createObjectURL(imageFile));\n\n    setFileName(imageFile.name);\n  };\n\n  const handleCompressImage = (e) => {\n    e.preventDefault();\n\n    const options = {\n      maxSizeMB: 1,\n\n      maxWidthOrHeight: 500,\n\n      useWebWorker: true\n    };\n\n    if (options.maxSizeMB >= origImage / 1024) {\n      alert(\"Image is too small, cant be compressed\");\n\n      return 0;\n    }\n\n    let output;\n\n    imageCompression(origImage, options).then((x) => {\n      output = x;\n\n      const downloadLink = URL.createObjectURL(output);\n\n      setCompressedImage(downloadLink);\n    });\n  };\n\n  return (\n    <div className=\"App\">\n      <h1></h1>\n\n      <Container>\n        <Grid>\n          <Grid.Column width={6}>\n            <Item>\n              {origImageFile ? (\n                <Image width=\"300px\" height=\"200px\" src={origImageFile}></Image>\n              ) : (\n                <Image\n                  width=\"300px\"\n                  height=\"200px\"\n                  src=\"https://www.iiitb.ac.in/includefiles/newsevents/no-image69.jpg\"\n                ></Image>\n              )}\n            </Item>\n          </Grid.Column>\n\n          <Grid.Column width={4}>\n            <input\n              type=\"file\"\n              accept=\"image/*\"\n              className=\"mt-2 btn btn-dark w-75\"\n              onChange={(e) => handle(e)}\n            />\n\n            <h1></h1>\n\n            {origImageFile && (\n              <Button\n                primary\n                onClick={(e) => {\n                  handleCompressImage(e);\n                }}\n              >\n                {\" \"}\n                Compress Image\n              </Button>\n            )}\n\n            <h1></h1>\n\n            {compressedImage && (\n              <Button>\n                <a href={compressedImage} download={fileName}>\n                  {\" \"}\n                  Download Image\n                </a>\n              </Button>\n            )}\n          </Grid.Column>\n\n          <Grid.Column width={8}>\n            <Item>\n              {compressedImage ? (\n                <Image\n                  width=\"300px\"\n                  height=\"200px\"\n                  src={compressedImage}\n                ></Image>\n              ) : (\n                <Image\n                  width=\"300px\"\n                  height=\"200px\"\n                  src=\"https://www.iiitb.ac.in/includefiles/newsevents/no-image69.jpg\"\n                ></Image>\n              )}\n            </Item>\n          </Grid.Column>\n        </Grid>\n      </Container>\n    </div>\n  );\n}\n\nexport default App;\n","import { StrictMode } from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport App from \"./App\";\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(\n  <StrictMode>\n    <App />\n  </StrictMode>,\n  rootElement\n);\n"],"sourceRoot":""}